services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=DEBUG"
      # Configuration simplifiée pour résoudre les problèmes de sous-domaines
      - "--providers.docker.network=bloom-cycle_bloomcycle-network"
      - "--providers.docker.defaultRule=Host(`{{ normalize .Name }}.bloomcycle.axelfrache.me`)"
      # Désactiver la redirection HTTPS pour le développement
      # - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Configuration SSL avec Let's Encrypt (commentée pour le moment)
      # - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      # - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      # - "--certificatesresolvers.myresolver.acme.email=axel.frache@outlook.fr"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - bloomcycle-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.bloomcycle.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"

  frontend:
    build: ./bloomcycle-frontend
    container_name: bloomcycle-frontend
    ports:
      - "4200:4200"
    volumes:
      - ./bloomcycle-frontend:/angular-app
      - /angular-app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - bloomcycle-network
    command: ["npm", "run", "start"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`bloomcycle.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=4200"

  backend:
    build: ./bloomcycle-backend
    container_name: bloomcycle-backend
    ports:
      - "9090:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/bloomcycle
      SPRING_DATASOURCE_USERNAME: bloomuser
      SPRING_DATASOURCE_PASSWORD: bloompassword
      BLOOMCYCLE_HOST: bloomcycle.axelfrache.me
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
    volumes:
      - bloomcycle_data:/app/projects
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - bloomcycle-network
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.bloomcycle.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=9090"

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: bloomcycle
      MYSQL_USER: bloomuser
      MYSQL_PASSWORD: bloompassword
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - bloomcycle-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root -prootpassword"]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  mysql-data:
  bloomcycle_data:
  letsencrypt:

networks:
  bloomcycle-network:
    driver: bridge